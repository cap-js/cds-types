name: Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

    # os: [ubuntu-latest, windows-latest, macos-latest]
    # version: [20, 18]

jobs:
  test:
    strategy:
      matrix:
        version: [18]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.version }}

    - run: |
        npm ci
        npm install file:. --no-save --force

    - run: |
        npm run prerelease:ci-fix
        npm run rollup:off

    # Add a conditional step for creating a non-admin user on Windows
    # runas /user:nonadmin "npm run test"
    # $process = Start-Process -FilePath "npm" -ArgumentList "run test" -PassThru -Wait -NoNewWindow -RedirectStandardOutput "output.txt" -RedirectStandardError "error.txt"

    # $scriptBlock = {
    #   $currentUser = New-Object Security.Principal.WindowsPrincipal([Security.Principal.WindowsIdentity]::GetCurrent())
    #   $isElevated = $currentUser.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
    #   echo "elevated: $isElevated"
    #   npm run test > stdout.txt 2>stderr.txt
    # }
    # $encodedScriptBlock = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($scriptBlock))
    # Start-Process powershell.exe -ArgumentList "-NoProfile -EncodedCommand $encodedScriptBlock" -Credential $credential -Wait -NoNewWindow
        #     Get-Content stdout.txt
        # Get-Content stderr.txt

    - name: Create non-admin user
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        $password = ConvertTo-SecureString "kragZTWET53$%" -AsPlainText -Force
        echo 1
        New-LocalUser "nonadmin" -Password $password
        echo 2
        Add-LocalGroupMember -Group "Users" -Member "nonadmin"
        echo 3
        $credential = New-Object System.Management.Automation.PSCredential ("nonadmin", $password)
        echo 4
        Start-Process -FilePath "npm" -ArgumentList "run test" -Credential $credential -PassThru -Wait -NoNewWindow -RedirectStandardOutput "output.txt" -RedirectStandardError "error.txt" || exit 1

        Get-Content output.txt
        Get-Content error.txt

    - name: Run Unit Tests
      if: matrix.os != 'windows-latest'
      run: |
        npm run test

    - run: |
        npm run rollup && npm run rollup:on
        npm run test

      #         runas /user:nonadmin "npm run test > output.txt 2> error.txt"
      # Get-Content "output.txt"
      # Get-Content "error.txt"
      # echo 5
